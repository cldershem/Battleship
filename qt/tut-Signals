#!/usr/bin/env python
# encoding: utf-8

import sys
from PyQt4 import QtGui, QtCore


# class Example(QtGui.QWidget):
class Example(QtGui.QMainWindow):

    def __init__(self):
        super(Example, self).__init__()

        # self.initUI()
        # self.initEventHandler()
        self.initEmit()

    def initSlider(self):
        lcd = QtGui.QLCDNumber(self)
        sld = QtGui.QSlider(QtCore.Qt.Horizontal, self)

        vbox = QtGui.QVBoxLayout()
        vbox.addWidget(lcd)
        vbox.addWidget(sld)

        self.setLayout(vbox)
        sld.valueChanged.connect(lcd.display)

        self.setGeometry(300, 300, 250, 150)
        self.setWindowTitle('Signal & Slot')

    def initEventHandler(self):
        self.setGeometry(300, 300, 250, 150)
        self.setWindowTitle('Event handler')

    def keyPressEvent(self, e):
        if e.key() == QtCore.Qt.Key_Escape:
            self.close()

    def initSender(self):
        btn1 = QtGui.QPushButton("Button 1", self)
        btn1.move(30, 50)

        btn2 = QtGui.QPushButton("Button 2", self)
        btn2.move(150, 50)

        btn1.clicked.connect(self.buttonClicked)
        btn2.clicked.connect(self.buttonClicked)

        self.statusBar()

        self.setGeometry(300, 300, 290, 150)
        self.setWindowTitle('Event sender')

    def buttonClicked(self):
        sender = self.sender()
        self.statusBar().showMessage(sender.text() + ' was pressed')

    closeApp = QtCore.pyqtSignal()

    def initEmit(self):
        self.closeApp.connect(self.close)

        self.setGeometry(300, 300, 290, 150)
        self.setWindowTitle('Event signal')

    def mousePressEvent(self, event):
        self.closeApp.emit()


def main():
    app = QtGui.QApplication(sys.argv)
    ex = Example()
    ex.show()
    sys.exit(app.exec_())


if __name__ == '__main__':
    main()
